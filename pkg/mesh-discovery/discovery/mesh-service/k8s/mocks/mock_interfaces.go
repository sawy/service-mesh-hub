// Code generated by MockGen. DO NOT EDIT.
// Source: ./mesh_service_finder.go

// Package service_discovery_mocks is a generated GoMock package.
package service_discovery_mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMeshServiceFinder is a mock of MeshServiceFinder interface.
type MockMeshServiceFinder struct {
	ctrl     *gomock.Controller
	recorder *MockMeshServiceFinderMockRecorder
}

// MockMeshServiceFinderMockRecorder is the mock recorder for MockMeshServiceFinder.
type MockMeshServiceFinderMockRecorder struct {
	mock *MockMeshServiceFinder
}

// NewMockMeshServiceFinder creates a new mock instance.
func NewMockMeshServiceFinder(ctrl *gomock.Controller) *MockMeshServiceFinder {
	mock := &MockMeshServiceFinder{ctrl: ctrl}
	mock.recorder = &MockMeshServiceFinderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMeshServiceFinder) EXPECT() *MockMeshServiceFinderMockRecorder {
	return m.recorder
}

// DiscoverMeshServices mocks base method.
func (m *MockMeshServiceFinder) Process(clusterName string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DiscoverMeshServices", clusterName)
	ret0, _ := ret[0].(error)
	return ret0
}

// DiscoverMeshServices indicates an expected call of DiscoverMeshServices.
func (mr *MockMeshServiceFinderMockRecorder) Process(clusterName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DiscoverMeshServices", reflect.TypeOf((*MockMeshServiceFinder)(nil).Process), clusterName)
}
